import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∂–∞–ª–æ–±
reports = {}
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
admins = {}
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_statuses = {}

# ID —Å–æ–∑–¥–∞—Ç–µ–ª—è (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
CREATOR_ID = 7451036519

def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∂–∞–ª–æ–±.')

def report(update: Update, context: CallbackContext) -> None:
    if len(context.args) < 2:
        update.message.reply_text('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /report (—é–∑–µ—Ä) (–ø—Ä–∏—á–∏–Ω–∞)')
        return
    user = context.args[0]
    reason = ' '.join(context.args[1:])
    report_number = len(reports) + 1
    reports[report_number] = {'user': user, 'reason': reason}
    update.message.reply_text(f'–ñ–∞–ª–æ–±–∞ –Ω–∞ {user} –ø—Ä–∏–Ω—è—Ç–∞. –ù–æ–º–µ—Ä –∂–∞–ª–æ–±—ã: {report_number}')

def accept_report(update: Update, context: CallbackContext) -> None:
    if len(context.args) < 1:
        update.message.reply_text('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /acceptreport (–Ω–æ–º–µ—Ä)')
        return
    report_number = int(context.args[0])
    if report_number in reports:
        report = reports.pop(report_number)
        update.message.reply_text(f'–ñ–∞–ª–æ–±–∞ –Ω–∞ {report["user"]} –ø—Ä–∏–Ω—è—Ç–∞!\n–ü—Ä–∏—á–∏–Ω–∞: {report["reason"]}')
    else:
        update.message.reply_text('–ù–µ—Ç —Ç–∞–∫–æ–π –∂–∞–ª–æ–±—ã.')

def add_admin(update: Update, context: CallbackContext) -> None:
    if update.message.from_user.id != CREATOR_ID:
        update.message.reply_text('–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.')
        return
    
    if len(context.args) < 1:
        update.message.reply_text('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /addadm (—é–∑–µ—Ä_id)')
        return
    user_id = int(context.args[0])
    admins[user_id] = True
    update.message.reply_text(f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å ID {user_id} –¥–æ–±–∞–≤–ª–µ–Ω.')

def check(update: Update, context: CallbackContext) -> None:
    if len(context.args) < 1:
        update.message.reply_text('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /check (—é–∑–µ—Ä)')
        return
    user = context.args[0]
    status = user_statuses.get(user, '–Ω–µ—Ç—É –≤ –±–∞–∑–µ')
    percentage = 0  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –æ–±–º–∞–Ω–∞
    rank = "–Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π"  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–∞–Ω–≥–æ–≤

    update.message.reply_text(
        f"üîé–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:\n
"
        f"üî•–†–µ–ø—É—Ç–∞—Ü–∏—è: {percentage}%\n"
        f"üÜî–ê–π–¥–∏: {user}\n"
        f"üßê–Æ–∑–µ—Ä: {user}\n"
        f"–†–∞–Ω–≥: {rank}"
    )

def check_my(update: Update, context: CallbackContext) -> None:
    user_id = update.message.from_user.id
    status = user_statuses.get(user_id, '–Ω–µ—Ç—É –≤ –±–∞–∑–µ')
    update.message.reply_text(f"–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {status}")

def add_garant(update: Update, context: CallbackContext) -> None:
    if len(context.args) < 1:
        update.message.reply_text('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /addgarant (—é–∑–µ—Ä)')
        return
    user = context.args[0]
    user_statuses[user] = '–≥–∞—Ä–∞–Ω—Ç'
    update.message.reply_text(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} —Ç–µ–ø–µ—Ä—å –≥–∞—Ä–∞–Ω—Ç.')

def main() -> None:
    # –í—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
    updater = Updater("YOUR_TOKEN")

    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("report", report))
    dispatcher.add_handler(CommandHandler("acceptreport", accept_report))
    dispatcher.add_handler(CommandHandler("addadm", add_admin))
    dispatcher.add_handler(CommandHandler("check", check))
    dispatcher.add_handler(CommandHandler("checkmy", check_my))
    dispatcher.add_handler(CommandHandler("addgarant", add_garant))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
