import telebot
import random
import time
import requests

API_TOKEN = '7275319279:AAGZh_GzI4iO5Vsb3lcBsF0RLUq5Meh-yh8'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
ADMIN_ID = 6321157988  # ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞

bot = telebot.TeleBot(API_TOKEN)

reports = {}
admins = {ADMIN_ID}
guarantees = {}
scammers = set()

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, 
                 """–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:
                 /report (—é–∑–µ—ÄID) (–ø—Ä–∏—á–∏–Ω–∞) - –ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É
                 /acceptreport (–Ω–æ–º–µ—Ä) (—Ä–∞–Ω–≥) - –ü—Ä–∏–Ω—è—Ç—å –∂–∞–ª–æ–±—É
                 /addadm (—é–∑–µ—ÄID) - –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞
                 /check (—é–∑–µ—ÄID) - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é
                 /checkmy - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å
                 /addgarant (—é–∑–µ—ÄID) - –°–¥–µ–ª–∞—Ç—å –≥–∞—Ä–∞–Ω—Ç–æ–º
                 /delbase (—é–∑–µ—ÄID) (–ø—Ä–∏—á–∏–Ω–∞) - –£–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–∑—ã""")

def get_user_id(param):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username –∏–ª–∏ ID."""
    try:
        if param.isdigit():
            return int(param)
        else:
            user = bot.get_chat(param)
            return user.id if user else None
    except Exception:
        return None

@bot.message_handler(commands=['report'])
def cmd_report(message):
    args = message.text.split()[1:]
    if len(args) < 2:
        bot.reply_to(message, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /report (—é–∑–µ—ÄID) (–ø—Ä–∏—á–∏–Ω–∞)")
        return

    reported_user_id = get_user_id(args[0])
    if reported_user_id is None:
        bot.reply_to(message, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∏–ª–∏ username.")
        return

    reason = ' '.join(args[1:])
    report_id = random.randint(10000, 99999)
    reports[report_id] = {'user_id': reported_user_id, 'status': 'pending', 'reason': reason, 'rank': None}
    bot.reply_to(message, f'–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –ø–æ–¥–∞–Ω–∞. –ù–æ–º–µ—Ä –∂–∞–ª–æ–±—ã: {report_id}')

@bot.message_handler(commands=['acceptreport'])
def cmd_accept_report(message):
    if message.from_user.id not in admins:
        bot.reply_to(message, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        return

    args = message.text.split()[1:]
    if len(args) < 2:
        bot.reply_to(message, '–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∂–∞–ª–æ–±—ã –∏ —Ä–∞–Ω–≥ (—Å–∫–∞–º–µ—Ä, –ø–µ—Ç—É—Ö, –≥–∞—Ä–∞–Ω—Ç).')
        return

    try:
        report_id = int(args[0])
        rank = args[1].lower()
    except ValueError:
        bot.reply_to(message, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–æ–º–µ—Ä –∂–∞–ª–æ–±—ã ‚Äî —ç—Ç–æ —á–∏—Å–ª–æ.')
        return

    if report_id in reports:
        reports[report_id]['status'] = 'accepted'
        reports[report_id]['rank'] = rank

        if rank == '—Å–∫–∞–º–µ—Ä':
            scammers.add(reports[report_id]['user_id'])
        elif rank == '–≥–∞—Ä–∞–Ω—Ç':
            guarantees[reports[report_id]['user_id']] = True

        bot.reply_to(message, f'–ñ–∞–ª–æ–±–∞ {report_id} –ø—Ä–∏–Ω—è—Ç–∞. –†–∞–Ω–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {rank}.')
    else:
        bot.reply_to(message, '–¢–∞–∫–æ–π –∂–∞–ª–æ–±—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')

@bot.message_handler(commands=['addadm'])
def cmd_add_admin(message):
    if message.from_user.id not in admins:
        bot.reply_to(message, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        return

    args = message.text.split()[1:]
    if len(args) < 1:
        bot.reply_to(message, '–£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã.')
        return

    new_admin = get_user_id(args[0])
    if new_admin is None:
        bot.reply_to(message, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∏–ª–∏ username.')
        return

    admins.add(new_admin)
    bot.reply_to(message, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_admin} –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.')

@bot.message_handler(commands=['check'])
def cmd_check(message):
    args = message.text.split()[1:]
    if len(args) < 1:
        bot.reply_to(message, '–£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.')
        return
    
    check_user_id = get_user_id(args[0])
    if check_user_id is None:
        bot.reply_to(message, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∏–ª–∏ username.')
        return
    
    rank = '–ù–µ—Ç—É –≤ –±–∞–∑–µ'
    if check_user_id in scammers:
        rank = '—Å–∫–∞–º–µ—Ä'
    elif check_user_id in guarantees:
        rank = '–≥–∞—Ä–∞–Ω—Ç'
    
    username = f"ID: {check_user_id}"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è username

    bot.reply_to(message, 
                  f"üîé–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:\n"
                  f"üî•–†–µ–ø—É—Ç–∞—Ü–∏—è: {rank}\n"
                  f"üÜî–ê–π–¥–∏: {check_user_id}\n")

@bot.message_handler(commands=['checkmy'])
def cmd_check_my_status(message):
    user_id = message.from_user.id
    rank = '–ù–µ—Ç—É –≤ –±–∞–∑–µ'

    if user_id in scammers:
        rank = '—Å–∫–∞–º–µ—Ä'
    elif user_id in guarantees:
        rank = '–≥–∞—Ä–∞–Ω—Ç'

    username = f"ID: {user_id}"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è username

    bot.reply_to(message, 
                  f"üîé–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:\n"
                  f"üî•–†–µ–ø—É—Ç–∞—Ü–∏—è: {rank}\n"
                  f"üÜî–ê–π–¥–∏: {user_id}\n  ")

@bot.message_handler(commands=['addgarant'])
def cmd_add_garant(message):
    args = message.text.split()[1:]
    if len(args) < 1:
        bot.reply_to(message, '–£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥–∞—Ä–∞–Ω—Ç.')
        return

    garant_id = get_user_id(args[0])
    if garant_id is None:
        bot.reply_to(message, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∏–ª–∏ username.')
        return

    guarantees[garant_id] = True
    bot.reply_to(message, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {garant_id} –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –≥–∞—Ä–∞–Ω—Ç.')

@bot.message_handler(commands=['delbase'])
def cmd_del_base(message):
    if message.from_user.id not in admins:
        bot.reply_to(message, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        return

    args = message.text.split()[1:]
    if len(args) < 2:
        bot.reply_to(message, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /delbase (—é–∑–µ—ÄID) (–ø—Ä–∏—á–∏–Ω–∞)')
        return

    del_user_id = get_user_id(args[0])
    if del_user_id is None:
        bot.reply_to(message, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∏–ª–∏ username.')
        return

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã (–≤–æ–∑–≤—Ä–∞—Ç —Å—Ç–∞—Ç—É—Å–∞)
    if del_user_id in scammers:
        scammers.remove(del_user_id)
    if del_user_id in guarantees:
        guarantees.pop(del_user_id, None)

    bot.reply_to(message, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {del_user_id} —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã. –ü—Ä–∏—á–∏–Ω–∞: {" ".join(args[1:])}. –°—Ç–∞—Ç—É—Å –≤–æ–∑–≤—Ä–∞—â–µ–Ω: –ù–µ—Ç—É –≤ –±–∞–∑–µ.')

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∏—Å–∫–ª—é—á–µ–Ω–∏–π
while True:
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"An error occurred: {e}")
